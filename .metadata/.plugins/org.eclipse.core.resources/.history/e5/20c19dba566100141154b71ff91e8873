package com.DR.dLib.animations;

import java.util.ArrayList;

import com.DR.dLib.dObject;
import com.DR.dLib.dTweener;
import com.DR.dLib.dValues;
import com.badlogic.gdx.math.Vector2;

public class SlideElasticAnimation extends dAnimation {

	// the distance (final - initial) all objects will move 
	protected float deltaPos = 0;
	private ArrayList<Vector2> startPos;
	
	public SlideElasticAnimation(float duration, AnimationStatusListener listener, int ID, float deltaPos,  dObject... objectsToAnimate) {
		super(duration, listener, ID, objectsToAnimate);
		this.deltaPos = deltaPos;
	}

	@Override
	protected void animate(float time, float duration, float delta) {
		for(int x = 0; x < getAnimatedObjects().length; x++)
		{
			getAnimatedObjects()[x].setY(dTweener.ElasticOut(time,(dValues.camera.position.y - dValues.VH / 2f - getAnimatedObjects()[x].getHeight() * 1.25f),
					(dValues.camera.position.y - dValues.VH / 2f) - (dValues.camera.position.y - dValues.VH / 2f - getAnimatedObjects()[x].getHeight() * 1.25f),
					duration, 6f));
		}
	}

	@Override
	public void start()
	{
		super.start();
		for(int x = 0; x < getAnimatedObjects().length; x++)
		{
			startPos.add(getAnimatedObjects()[x].getPos());
		}
	}
}
